import type { Vulnerability } from '@/type'
import { useRouter } from 'next/router'
import React, { useState } from 'react'
import { useEffect } from 'react'

type VulnerabilityListProps ={
    vulnerabilities: Vulnerability[]
}

const onClickHandler = (vulnerability: Vulnerability) => {
    const queryString = new URLSearchParams(vulnerability).toString();

    window.location.href = `/vulnerability?${queryString}`
}
const VulnerabilityList: React.FC<VulnerabilityListProps> = ({vulnerabilities}) => {
  const [vulnerabilityList, setVulnerabilityList] = useState<Vulnerability[]>(vulnerabilities);
  const router = useRouter()
  const { query } = router;
  const sortKey = query.sort as keyof Vulnerability;

  useEffect(() => {
    if (sortKey) {
        sortVulnerabilities(sortKey);
    }
  }, [sortKey]);
const sortVulnerabilities = (key: keyof Vulnerability) => {
    console.log('sort343433434')
    console.log('key',key)
    const sortedVulnerabilities = [...vulnerabilityList].sort((a, b) => {
        if (a[key] < b[key]) return -1;
        if (a[key] > b[key]) return 1;
        return 0;
    })
    setVulnerabilityList(sortedVulnerabilities);
}

const handleSort = (key: keyof Vulnerability) => {
    router.push({
      query: { ...query, sort: key }
    });
    // sortVulnerabilities(key);
  };

  return (
    <div>
        <table>
            
                <thead>
                    <tr>
                        <th onClick={()=>handleSort('oid')}>Oid</th>
                        <th onClick={()=>handleSort('name')}>Name</th>
                        <th onClick={()=>handleSort('severity')}>Severity</th>
                        <th onClick={()=>handleSort('assetId')}>AssetId</th>
                        <th onClick={()=>handleSort('qod')}>Qod</th>
                        <th onClick={()=>handleSort('solutionType')}>SolutionType</th>
                    </tr>
                </thead>
                <tbody>
                {vulnerabilityList.map((vulnerability) => (
                    <tr key={vulnerability.oid} onClick={() => onClickHandler(vulnerability)}>
                        <td>{vulnerability.oid}</td>
                        <td>{vulnerability.name}</td>
                        <td>{vulnerability.severity}</td>
                        <td>{vulnerability.assetId}</td>
                        <td>{vulnerability.qod}</td>
                        <td>{vulnerability.solutionType}</td>
                    </tr>
                ))}
            </tbody>
            
        </table>
    </div>
  )
}

export default VulnerabilityList