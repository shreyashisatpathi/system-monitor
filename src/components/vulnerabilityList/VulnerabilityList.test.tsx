import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import VulnerabilityList from './VulnerabilityList';
import type { Vulnerability } from '@/type';
import { useRouter } from 'next/router';
import TestWrapper from '@/utils/test-utils';

const mockVulnerabilities: Vulnerability[] = [
  {
    oid: '1',
    name: 'Test Vulnerability 1',
    severity: 'High',
    assetId: 'Asset1',
    solutionType: 'Patch',
    qod: '30',
  },
  {
    oid: '2',
    name: 'Test Vulnerability 2',
    severity: 'Medium',
    assetId: 'Asset2',
    solutionType: 'Mitigation',
    qod: '30',
  },
];

describe('VulnerabilityList', () => {
  beforeEach(() => {
    // Mock the useRouter hook
    (useRouter as jest.Mock).mockReturnValue({
      route: '/',
      pathname: '',
      query: '',
      asPath: '',
    });
  });

  test('renders vulnerabilities list correctly', () => {
    render(
      <TestWrapper>
        <VulnerabilityList vulnerabilities={mockVulnerabilities} />
      </TestWrapper>
    );
    expect(screen.getByText('Test Vulnerability 1')).toBeInTheDocument();
    expect(screen.getByText('Test Vulnerability 2')).toBeInTheDocument();
    expect(screen.getByText('High')).toBeInTheDocument();
    expect(screen.getByText('Medium')).toBeInTheDocument();
    expect(screen.getByText('Asset1')).toBeInTheDocument();
    expect(screen.getByText('Asset2')).toBeInTheDocument();
    expect(screen.getByText('Patch')).toBeInTheDocument();
    expect(screen.getByText('Mitigation')).toBeInTheDocument();
  });
});
