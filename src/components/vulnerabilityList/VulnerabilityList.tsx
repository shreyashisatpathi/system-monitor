import type { Vulnerability } from '@/type';
import { exportHandler, selectedRecordForExport } from '@/utils/exportToCSVFile';
import { Checkbox } from '@mantine/core';
import Link from 'next/link';
import { useRouter } from 'next/router';
import React, { useState } from 'react';
import { useEffect } from 'react';

type VulnerabilityListProps = {
  vulnerabilities: Vulnerability[];
};

const onClickHandler = (vulnerability: Vulnerability) => {
  const queryString = new URLSearchParams(vulnerability).toString();

  window.location.href = `/vulnerability?${queryString}`;
};
const VulnerabilityList: React.FC<VulnerabilityListProps> = ({
  vulnerabilities,
}) => {
  const [vulnerabilityList, setVulnerabilityList] =
    useState<Vulnerability[]>(vulnerabilities);
  const [checked, setChecked] = useState<string[]>([]);
  const router = useRouter();
  const { query } = router;
  const sortKey = query.sort as keyof Vulnerability;

  useEffect(() => {
    if (sortKey) {
      sortVulnerabilities(sortKey);
    }
  }, [sortKey]);
  const sortVulnerabilities = (key: keyof Vulnerability) => {
    const sortedVulnerabilities = [...vulnerabilityList].sort((a, b) => {
      if (a[key] < b[key]) return -1;
      if (a[key] > b[key]) return 1;
      return 0;
    });
    setVulnerabilityList(sortedVulnerabilities);
  };

  const handleSort = (key: keyof Vulnerability) => {
    router.push({
      query: { ...query, sort: key },
    });
  };
  const toggleCheckBoxHandler = (oid: string) => {
    if (checked.includes(oid)) {
      setChecked(checked.filter((item) => item !== oid));
    } else {
      setChecked([...checked, oid]);
    }
  };

  return (
    <div>
      <button
        onClick={() =>
          exportHandler(
            selectedRecordForExport(vulnerabilityList, checked),
            'Vulnerabilities'
          )
        }
      >
        Export to CSV
      </button>
      <table>
        <thead>
          <tr>
            <th></th>
            <th onClick={() => handleSort('oid')}>Oid</th>
            <th onClick={() => handleSort('name')}>Name</th>
            <th onClick={() => handleSort('severity')}>Severity</th>
            <th onClick={() => handleSort('assetId')}>AssetId</th>
            <th onClick={() => handleSort('qod')}>Qod</th>
            <th onClick={() => handleSort('solutionType')}>SolutionType</th>
          </tr>
        </thead>
        <tbody>
          {vulnerabilityList.map((vulnerability) => (
            <tr key={vulnerability.oid}>
              <td>
                <Checkbox
                  checked={checked.includes(vulnerability.oid)}
                  onChange={() => toggleCheckBoxHandler(vulnerability.oid)}
                />
              </td>
              <td>{vulnerability.oid}</td>
              <td>{vulnerability.name}</td>
              <td>{vulnerability.severity}</td>
              <td>{vulnerability.assetId}</td>
              <td>{vulnerability.qod}</td>
              <td>{vulnerability.solutionType}</td>
              <td onClick={() => onClickHandler(vulnerability)}>
                <Link href="">Show Details</Link>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default VulnerabilityList;
